# Makefile.in generated by automake 1.11.6 from Makefile.am.
# ccode/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/smartsim
pkgincludedir = $(includedir)/smartsim
pkglibdir = $(libdir)/smartsim
pkglibexecdir = $(libexecdir)/smartsim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
smartsim_PROGRAMS = smartsim$(EXEEXT)
subdir = ccode
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(smartsimdir)"
PROGRAMS = $(smartsim_PROGRAMS)
am__objects_1 =
am_smartsim_OBJECTS = smartsim-main.$(OBJEXT) \
	smartsim-annotation.$(OBJEXT) smartsim-basicdialog.$(OBJEXT) \
	smartsim-circuitinformation.$(OBJEXT) \
	smartsim-compiledcircuit.$(OBJEXT) \
	smartsim-componentdef.$(OBJEXT) smartsim-def-and.$(OBJEXT) \
	smartsim-def-basic-ss-display.$(OBJEXT) \
	smartsim-def-buffer.$(OBJEXT) smartsim-def-clock.$(OBJEXT) \
	smartsim-def-constant.$(OBJEXT) smartsim-def-custom.$(OBJEXT) \
	smartsim-def-memory.$(OBJEXT) \
	smartsim-def-multiplexer.$(OBJEXT) smartsim-def-or.$(OBJEXT) \
	smartsim-def-pe-d-flipflop.$(OBJEXT) \
	smartsim-def-plugin.$(OBJEXT) smartsim-def-reader.$(OBJEXT) \
	smartsim-def-t-flipflop.$(OBJEXT) \
	smartsim-def-toggle.$(OBJEXT) smartsim-def-tristate.$(OBJEXT) \
	smartsim-def-xor.$(OBJEXT) smartsim-componentstate.$(OBJEXT) \
	smartsim-state-and.$(OBJEXT) \
	smartsim-state-basic-ss-display.$(OBJEXT) \
	smartsim-state-buffer.$(OBJEXT) smartsim-state-clock.$(OBJEXT) \
	smartsim-state-constant.$(OBJEXT) \
	smartsim-state-memory.$(OBJEXT) \
	smartsim-state-multiplexer.$(OBJEXT) \
	smartsim-state-or.$(OBJEXT) \
	smartsim-state-pe-d-flipflop.$(OBJEXT) \
	smartsim-state-reader.$(OBJEXT) \
	smartsim-state-t-flipflop.$(OBJEXT) \
	smartsim-state-toggle.$(OBJEXT) \
	smartsim-state-tristate.$(OBJEXT) smartsim-state-xor.$(OBJEXT) \
	smartsim-componentinst.$(OBJEXT) smartsim-connection.$(OBJEXT) \
	smartsim-customiser.$(OBJEXT) smartsim-designer.$(OBJEXT) \
	smartsim-designerwindow.$(OBJEXT) smartsim-graphic.$(OBJEXT) \
	smartsim-imageexporter.$(OBJEXT) smartsim-path.$(OBJEXT) \
	smartsim-pindef.$(OBJEXT) smartsim-pininst.$(OBJEXT) \
	smartsim-plugincomponentmanager.$(OBJEXT) \
	smartsim-project.$(OBJEXT) smartsim-propertiesquery.$(OBJEXT) \
	smartsim-propertyitem.$(OBJEXT) \
	smartsim-propertyitem-double.$(OBJEXT) \
	smartsim-propertyitem-file.$(OBJEXT) \
	smartsim-propertyitem-int.$(OBJEXT) \
	smartsim-propertyitem-propertyset.$(OBJEXT) \
	smartsim-propertyitem-selection.$(OBJEXT) \
	smartsim-propertyitem-string.$(OBJEXT) \
	smartsim-simulatorwindow.$(OBJEXT) smartsim-tag.$(OBJEXT) \
	smartsim-wireinst.$(OBJEXT) smartsim-wirestate.$(OBJEXT) \
	smartsim-timingdiagram.$(OBJEXT) \
	smartsim-updatequeue.$(OBJEXT) $(am__objects_1)
smartsim_OBJECTS = $(am_smartsim_OBJECTS)
am__DEPENDENCIES_1 =
smartsim_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
smartsim_LINK = $(CCLD) $(smartsim_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(smartsim_SOURCES)
DIST_SOURCES = $(smartsim_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ashley/devel/SmartSim/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/ashley/devel/SmartSim/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ashley/devel/SmartSim/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ashley/devel/SmartSim/missing --run automake-1.11
AWK = gawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng16 
CAIRO_LIBS = -lcairo 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
GLIB_LIBS = -lgobject-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lrt -lglib-2.0 
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBRSVG_CFLAGS = -pthread -I/usr/include/librsvg-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libdrm -I/usr/include/libpng16 
LIBRSVG_LIBS = -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo 
LIBS = 
LIBXML_CFLAGS = -I/usr/include/libxml2 
LIBXML_LIBS = -lxml2 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ashley/devel/SmartSim/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = smartsim
PACKAGE_BUGREPORT = ashleynewson@smartsim.org.uk
PACKAGE_NAME = smartsim
PACKAGE_STRING = smartsim 1.3.1
PACKAGE_TARNAME = smartsim
PACKAGE_URL = 
PACKAGE_VERSION = 1.3.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TAR = tar
VERSION = 1.3.1
abs_builddir = /home/ashley/devel/SmartSim/ccode
abs_srcdir = /home/ashley/devel/SmartSim/ccode
abs_top_builddir = /home/ashley/devel/SmartSim
abs_top_srcdir = /home/ashley/devel/SmartSim
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ashley/devel/SmartSim/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
tar = 
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
NOTHING = 
smartsimdir = $(bindir)
smartsim_SOURCES = \
	main.c \
	annotation.c \
	basicdialog.c \
	circuitinformation.c \
	compiledcircuit.c \
	componentdef.c \
	componentdef/def-and.c \
	componentdef/def-basic-ss-display.c \
	componentdef/def-buffer.c \
	componentdef/def-clock.c \
	componentdef/def-constant.c \
	componentdef/def-custom.c \
	componentdef/def-memory.c \
	componentdef/def-multiplexer.c \
	componentdef/def-or.c \
	componentdef/def-pe-d-flipflop.c \
	componentdef/def-plugin.c \
	componentdef/def-reader.c \
	componentdef/def-t-flipflop.c \
	componentdef/def-toggle.c \
	componentdef/def-tristate.c \
	componentdef/def-xor.c \
	componentstate.c \
	componentstate/state-and.c \
	componentstate/state-basic-ss-display.c \
	componentstate/state-buffer.c \
	componentstate/state-clock.c \
	componentstate/state-constant.c \
	componentstate/state-memory.c \
	componentstate/state-multiplexer.c \
	componentstate/state-or.c \
	componentstate/state-pe-d-flipflop.c \
	componentstate/state-reader.c \
	componentstate/state-t-flipflop.c \
	componentstate/state-toggle.c \
	componentstate/state-tristate.c \
	componentstate/state-xor.c \
	componentinst.c \
	connection.c \
	customiser.c \
	designer.c \
	designerwindow.c \
	graphic.c \
	imageexporter.c \
	path.c \
	pindef.c \
	pininst.c \
	plugincomponentmanager.c \
	project.c \
	propertiesquery.c \
	propertyitem.c \
	propertyitem/propertyitem-double.c \
	propertyitem/propertyitem-file.c \
	propertyitem/propertyitem-int.c \
	propertyitem/propertyitem-propertyset.c \
	propertyitem/propertyitem-selection.c \
	propertyitem/propertyitem-string.c \
	simulatorwindow.c \
	tag.c \
	wireinst.c \
	wirestate.c \
	timingdiagram.c \
	updatequeue.c \
	$(NOTHING)


# Note that PACKAGE_DATADIR MUST have ending "/"
DEF_CFLAGS = \
	-DPACKAGE_DATADIR=\"$(pkgdatadir)/\" \
	-DPACKAGE_LIBDIR=\"$(pkglibdir)/\" \
	-DPACKAGE_VERSION=\"$(VERSION)\" \
	$(NOTHING)

smartsim_LDADD = \
	$(GLIB_LIBS) \
	$(GTK_LIBS) \
	$(CAIRO_LIBS) \
	$(LIBRSVG_LIBS) \
	$(LIBXML_LIBS) \
	$(NOTHING)

smartsim_CFLAGS = \
	$(GLIB_CFLAGS) \
	$(GTK_CFLAGS) \
	$(CAIRO_CFLAGS) \
	$(LIBRSVG_CFLAGS) \
	$(LIBXML_CFLAGS) \
	$(DEF_CFLAGS) \
	$(NOTHING)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu ccode/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu ccode/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-smartsimPROGRAMS: $(smartsim_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(smartsim_PROGRAMS)'; test -n "$(smartsimdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(smartsimdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(smartsimdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(smartsimdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(smartsimdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-smartsimPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(smartsim_PROGRAMS)'; test -n "$(smartsimdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(smartsimdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(smartsimdir)" && rm -f $$files

clean-smartsimPROGRAMS:
	-test -z "$(smartsim_PROGRAMS)" || rm -f $(smartsim_PROGRAMS)
smartsim$(EXEEXT): $(smartsim_OBJECTS) $(smartsim_DEPENDENCIES) $(EXTRA_smartsim_DEPENDENCIES) 
	@rm -f smartsim$(EXEEXT)
	$(smartsim_LINK) $(smartsim_OBJECTS) $(smartsim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/smartsim-annotation.Po
include ./$(DEPDIR)/smartsim-basicdialog.Po
include ./$(DEPDIR)/smartsim-circuitinformation.Po
include ./$(DEPDIR)/smartsim-compiledcircuit.Po
include ./$(DEPDIR)/smartsim-componentdef.Po
include ./$(DEPDIR)/smartsim-componentinst.Po
include ./$(DEPDIR)/smartsim-componentstate.Po
include ./$(DEPDIR)/smartsim-connection.Po
include ./$(DEPDIR)/smartsim-customiser.Po
include ./$(DEPDIR)/smartsim-def-and.Po
include ./$(DEPDIR)/smartsim-def-basic-ss-display.Po
include ./$(DEPDIR)/smartsim-def-buffer.Po
include ./$(DEPDIR)/smartsim-def-clock.Po
include ./$(DEPDIR)/smartsim-def-constant.Po
include ./$(DEPDIR)/smartsim-def-custom.Po
include ./$(DEPDIR)/smartsim-def-memory.Po
include ./$(DEPDIR)/smartsim-def-multiplexer.Po
include ./$(DEPDIR)/smartsim-def-or.Po
include ./$(DEPDIR)/smartsim-def-pe-d-flipflop.Po
include ./$(DEPDIR)/smartsim-def-plugin.Po
include ./$(DEPDIR)/smartsim-def-reader.Po
include ./$(DEPDIR)/smartsim-def-t-flipflop.Po
include ./$(DEPDIR)/smartsim-def-toggle.Po
include ./$(DEPDIR)/smartsim-def-tristate.Po
include ./$(DEPDIR)/smartsim-def-xor.Po
include ./$(DEPDIR)/smartsim-designer.Po
include ./$(DEPDIR)/smartsim-designerwindow.Po
include ./$(DEPDIR)/smartsim-graphic.Po
include ./$(DEPDIR)/smartsim-imageexporter.Po
include ./$(DEPDIR)/smartsim-main.Po
include ./$(DEPDIR)/smartsim-path.Po
include ./$(DEPDIR)/smartsim-pindef.Po
include ./$(DEPDIR)/smartsim-pininst.Po
include ./$(DEPDIR)/smartsim-plugincomponentmanager.Po
include ./$(DEPDIR)/smartsim-project.Po
include ./$(DEPDIR)/smartsim-propertiesquery.Po
include ./$(DEPDIR)/smartsim-propertyitem-double.Po
include ./$(DEPDIR)/smartsim-propertyitem-file.Po
include ./$(DEPDIR)/smartsim-propertyitem-int.Po
include ./$(DEPDIR)/smartsim-propertyitem-propertyset.Po
include ./$(DEPDIR)/smartsim-propertyitem-selection.Po
include ./$(DEPDIR)/smartsim-propertyitem-string.Po
include ./$(DEPDIR)/smartsim-propertyitem.Po
include ./$(DEPDIR)/smartsim-simulatorwindow.Po
include ./$(DEPDIR)/smartsim-state-and.Po
include ./$(DEPDIR)/smartsim-state-basic-ss-display.Po
include ./$(DEPDIR)/smartsim-state-buffer.Po
include ./$(DEPDIR)/smartsim-state-clock.Po
include ./$(DEPDIR)/smartsim-state-constant.Po
include ./$(DEPDIR)/smartsim-state-memory.Po
include ./$(DEPDIR)/smartsim-state-multiplexer.Po
include ./$(DEPDIR)/smartsim-state-or.Po
include ./$(DEPDIR)/smartsim-state-pe-d-flipflop.Po
include ./$(DEPDIR)/smartsim-state-reader.Po
include ./$(DEPDIR)/smartsim-state-t-flipflop.Po
include ./$(DEPDIR)/smartsim-state-toggle.Po
include ./$(DEPDIR)/smartsim-state-tristate.Po
include ./$(DEPDIR)/smartsim-state-xor.Po
include ./$(DEPDIR)/smartsim-tag.Po
include ./$(DEPDIR)/smartsim-timingdiagram.Po
include ./$(DEPDIR)/smartsim-updatequeue.Po
include ./$(DEPDIR)/smartsim-wireinst.Po
include ./$(DEPDIR)/smartsim-wirestate.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

smartsim-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-main.o -MD -MP -MF $(DEPDIR)/smartsim-main.Tpo -c -o smartsim-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/smartsim-main.Tpo $(DEPDIR)/smartsim-main.Po
#	source='main.c' object='smartsim-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

smartsim-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-main.obj -MD -MP -MF $(DEPDIR)/smartsim-main.Tpo -c -o smartsim-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-main.Tpo $(DEPDIR)/smartsim-main.Po
#	source='main.c' object='smartsim-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

smartsim-annotation.o: annotation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-annotation.o -MD -MP -MF $(DEPDIR)/smartsim-annotation.Tpo -c -o smartsim-annotation.o `test -f 'annotation.c' || echo '$(srcdir)/'`annotation.c
	$(am__mv) $(DEPDIR)/smartsim-annotation.Tpo $(DEPDIR)/smartsim-annotation.Po
#	source='annotation.c' object='smartsim-annotation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-annotation.o `test -f 'annotation.c' || echo '$(srcdir)/'`annotation.c

smartsim-annotation.obj: annotation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-annotation.obj -MD -MP -MF $(DEPDIR)/smartsim-annotation.Tpo -c -o smartsim-annotation.obj `if test -f 'annotation.c'; then $(CYGPATH_W) 'annotation.c'; else $(CYGPATH_W) '$(srcdir)/annotation.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-annotation.Tpo $(DEPDIR)/smartsim-annotation.Po
#	source='annotation.c' object='smartsim-annotation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-annotation.obj `if test -f 'annotation.c'; then $(CYGPATH_W) 'annotation.c'; else $(CYGPATH_W) '$(srcdir)/annotation.c'; fi`

smartsim-basicdialog.o: basicdialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-basicdialog.o -MD -MP -MF $(DEPDIR)/smartsim-basicdialog.Tpo -c -o smartsim-basicdialog.o `test -f 'basicdialog.c' || echo '$(srcdir)/'`basicdialog.c
	$(am__mv) $(DEPDIR)/smartsim-basicdialog.Tpo $(DEPDIR)/smartsim-basicdialog.Po
#	source='basicdialog.c' object='smartsim-basicdialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-basicdialog.o `test -f 'basicdialog.c' || echo '$(srcdir)/'`basicdialog.c

smartsim-basicdialog.obj: basicdialog.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-basicdialog.obj -MD -MP -MF $(DEPDIR)/smartsim-basicdialog.Tpo -c -o smartsim-basicdialog.obj `if test -f 'basicdialog.c'; then $(CYGPATH_W) 'basicdialog.c'; else $(CYGPATH_W) '$(srcdir)/basicdialog.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-basicdialog.Tpo $(DEPDIR)/smartsim-basicdialog.Po
#	source='basicdialog.c' object='smartsim-basicdialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-basicdialog.obj `if test -f 'basicdialog.c'; then $(CYGPATH_W) 'basicdialog.c'; else $(CYGPATH_W) '$(srcdir)/basicdialog.c'; fi`

smartsim-circuitinformation.o: circuitinformation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-circuitinformation.o -MD -MP -MF $(DEPDIR)/smartsim-circuitinformation.Tpo -c -o smartsim-circuitinformation.o `test -f 'circuitinformation.c' || echo '$(srcdir)/'`circuitinformation.c
	$(am__mv) $(DEPDIR)/smartsim-circuitinformation.Tpo $(DEPDIR)/smartsim-circuitinformation.Po
#	source='circuitinformation.c' object='smartsim-circuitinformation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-circuitinformation.o `test -f 'circuitinformation.c' || echo '$(srcdir)/'`circuitinformation.c

smartsim-circuitinformation.obj: circuitinformation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-circuitinformation.obj -MD -MP -MF $(DEPDIR)/smartsim-circuitinformation.Tpo -c -o smartsim-circuitinformation.obj `if test -f 'circuitinformation.c'; then $(CYGPATH_W) 'circuitinformation.c'; else $(CYGPATH_W) '$(srcdir)/circuitinformation.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-circuitinformation.Tpo $(DEPDIR)/smartsim-circuitinformation.Po
#	source='circuitinformation.c' object='smartsim-circuitinformation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-circuitinformation.obj `if test -f 'circuitinformation.c'; then $(CYGPATH_W) 'circuitinformation.c'; else $(CYGPATH_W) '$(srcdir)/circuitinformation.c'; fi`

smartsim-compiledcircuit.o: compiledcircuit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-compiledcircuit.o -MD -MP -MF $(DEPDIR)/smartsim-compiledcircuit.Tpo -c -o smartsim-compiledcircuit.o `test -f 'compiledcircuit.c' || echo '$(srcdir)/'`compiledcircuit.c
	$(am__mv) $(DEPDIR)/smartsim-compiledcircuit.Tpo $(DEPDIR)/smartsim-compiledcircuit.Po
#	source='compiledcircuit.c' object='smartsim-compiledcircuit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-compiledcircuit.o `test -f 'compiledcircuit.c' || echo '$(srcdir)/'`compiledcircuit.c

smartsim-compiledcircuit.obj: compiledcircuit.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-compiledcircuit.obj -MD -MP -MF $(DEPDIR)/smartsim-compiledcircuit.Tpo -c -o smartsim-compiledcircuit.obj `if test -f 'compiledcircuit.c'; then $(CYGPATH_W) 'compiledcircuit.c'; else $(CYGPATH_W) '$(srcdir)/compiledcircuit.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-compiledcircuit.Tpo $(DEPDIR)/smartsim-compiledcircuit.Po
#	source='compiledcircuit.c' object='smartsim-compiledcircuit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-compiledcircuit.obj `if test -f 'compiledcircuit.c'; then $(CYGPATH_W) 'compiledcircuit.c'; else $(CYGPATH_W) '$(srcdir)/compiledcircuit.c'; fi`

smartsim-componentdef.o: componentdef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentdef.o -MD -MP -MF $(DEPDIR)/smartsim-componentdef.Tpo -c -o smartsim-componentdef.o `test -f 'componentdef.c' || echo '$(srcdir)/'`componentdef.c
	$(am__mv) $(DEPDIR)/smartsim-componentdef.Tpo $(DEPDIR)/smartsim-componentdef.Po
#	source='componentdef.c' object='smartsim-componentdef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentdef.o `test -f 'componentdef.c' || echo '$(srcdir)/'`componentdef.c

smartsim-componentdef.obj: componentdef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentdef.obj -MD -MP -MF $(DEPDIR)/smartsim-componentdef.Tpo -c -o smartsim-componentdef.obj `if test -f 'componentdef.c'; then $(CYGPATH_W) 'componentdef.c'; else $(CYGPATH_W) '$(srcdir)/componentdef.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-componentdef.Tpo $(DEPDIR)/smartsim-componentdef.Po
#	source='componentdef.c' object='smartsim-componentdef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentdef.obj `if test -f 'componentdef.c'; then $(CYGPATH_W) 'componentdef.c'; else $(CYGPATH_W) '$(srcdir)/componentdef.c'; fi`

smartsim-def-and.o: componentdef/def-and.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-and.o -MD -MP -MF $(DEPDIR)/smartsim-def-and.Tpo -c -o smartsim-def-and.o `test -f 'componentdef/def-and.c' || echo '$(srcdir)/'`componentdef/def-and.c
	$(am__mv) $(DEPDIR)/smartsim-def-and.Tpo $(DEPDIR)/smartsim-def-and.Po
#	source='componentdef/def-and.c' object='smartsim-def-and.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-and.o `test -f 'componentdef/def-and.c' || echo '$(srcdir)/'`componentdef/def-and.c

smartsim-def-and.obj: componentdef/def-and.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-and.obj -MD -MP -MF $(DEPDIR)/smartsim-def-and.Tpo -c -o smartsim-def-and.obj `if test -f 'componentdef/def-and.c'; then $(CYGPATH_W) 'componentdef/def-and.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-and.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-and.Tpo $(DEPDIR)/smartsim-def-and.Po
#	source='componentdef/def-and.c' object='smartsim-def-and.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-and.obj `if test -f 'componentdef/def-and.c'; then $(CYGPATH_W) 'componentdef/def-and.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-and.c'; fi`

smartsim-def-basic-ss-display.o: componentdef/def-basic-ss-display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-basic-ss-display.o -MD -MP -MF $(DEPDIR)/smartsim-def-basic-ss-display.Tpo -c -o smartsim-def-basic-ss-display.o `test -f 'componentdef/def-basic-ss-display.c' || echo '$(srcdir)/'`componentdef/def-basic-ss-display.c
	$(am__mv) $(DEPDIR)/smartsim-def-basic-ss-display.Tpo $(DEPDIR)/smartsim-def-basic-ss-display.Po
#	source='componentdef/def-basic-ss-display.c' object='smartsim-def-basic-ss-display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-basic-ss-display.o `test -f 'componentdef/def-basic-ss-display.c' || echo '$(srcdir)/'`componentdef/def-basic-ss-display.c

smartsim-def-basic-ss-display.obj: componentdef/def-basic-ss-display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-basic-ss-display.obj -MD -MP -MF $(DEPDIR)/smartsim-def-basic-ss-display.Tpo -c -o smartsim-def-basic-ss-display.obj `if test -f 'componentdef/def-basic-ss-display.c'; then $(CYGPATH_W) 'componentdef/def-basic-ss-display.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-basic-ss-display.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-basic-ss-display.Tpo $(DEPDIR)/smartsim-def-basic-ss-display.Po
#	source='componentdef/def-basic-ss-display.c' object='smartsim-def-basic-ss-display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-basic-ss-display.obj `if test -f 'componentdef/def-basic-ss-display.c'; then $(CYGPATH_W) 'componentdef/def-basic-ss-display.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-basic-ss-display.c'; fi`

smartsim-def-buffer.o: componentdef/def-buffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-buffer.o -MD -MP -MF $(DEPDIR)/smartsim-def-buffer.Tpo -c -o smartsim-def-buffer.o `test -f 'componentdef/def-buffer.c' || echo '$(srcdir)/'`componentdef/def-buffer.c
	$(am__mv) $(DEPDIR)/smartsim-def-buffer.Tpo $(DEPDIR)/smartsim-def-buffer.Po
#	source='componentdef/def-buffer.c' object='smartsim-def-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-buffer.o `test -f 'componentdef/def-buffer.c' || echo '$(srcdir)/'`componentdef/def-buffer.c

smartsim-def-buffer.obj: componentdef/def-buffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-buffer.obj -MD -MP -MF $(DEPDIR)/smartsim-def-buffer.Tpo -c -o smartsim-def-buffer.obj `if test -f 'componentdef/def-buffer.c'; then $(CYGPATH_W) 'componentdef/def-buffer.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-buffer.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-buffer.Tpo $(DEPDIR)/smartsim-def-buffer.Po
#	source='componentdef/def-buffer.c' object='smartsim-def-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-buffer.obj `if test -f 'componentdef/def-buffer.c'; then $(CYGPATH_W) 'componentdef/def-buffer.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-buffer.c'; fi`

smartsim-def-clock.o: componentdef/def-clock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-clock.o -MD -MP -MF $(DEPDIR)/smartsim-def-clock.Tpo -c -o smartsim-def-clock.o `test -f 'componentdef/def-clock.c' || echo '$(srcdir)/'`componentdef/def-clock.c
	$(am__mv) $(DEPDIR)/smartsim-def-clock.Tpo $(DEPDIR)/smartsim-def-clock.Po
#	source='componentdef/def-clock.c' object='smartsim-def-clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-clock.o `test -f 'componentdef/def-clock.c' || echo '$(srcdir)/'`componentdef/def-clock.c

smartsim-def-clock.obj: componentdef/def-clock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-clock.obj -MD -MP -MF $(DEPDIR)/smartsim-def-clock.Tpo -c -o smartsim-def-clock.obj `if test -f 'componentdef/def-clock.c'; then $(CYGPATH_W) 'componentdef/def-clock.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-clock.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-clock.Tpo $(DEPDIR)/smartsim-def-clock.Po
#	source='componentdef/def-clock.c' object='smartsim-def-clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-clock.obj `if test -f 'componentdef/def-clock.c'; then $(CYGPATH_W) 'componentdef/def-clock.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-clock.c'; fi`

smartsim-def-constant.o: componentdef/def-constant.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-constant.o -MD -MP -MF $(DEPDIR)/smartsim-def-constant.Tpo -c -o smartsim-def-constant.o `test -f 'componentdef/def-constant.c' || echo '$(srcdir)/'`componentdef/def-constant.c
	$(am__mv) $(DEPDIR)/smartsim-def-constant.Tpo $(DEPDIR)/smartsim-def-constant.Po
#	source='componentdef/def-constant.c' object='smartsim-def-constant.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-constant.o `test -f 'componentdef/def-constant.c' || echo '$(srcdir)/'`componentdef/def-constant.c

smartsim-def-constant.obj: componentdef/def-constant.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-constant.obj -MD -MP -MF $(DEPDIR)/smartsim-def-constant.Tpo -c -o smartsim-def-constant.obj `if test -f 'componentdef/def-constant.c'; then $(CYGPATH_W) 'componentdef/def-constant.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-constant.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-constant.Tpo $(DEPDIR)/smartsim-def-constant.Po
#	source='componentdef/def-constant.c' object='smartsim-def-constant.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-constant.obj `if test -f 'componentdef/def-constant.c'; then $(CYGPATH_W) 'componentdef/def-constant.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-constant.c'; fi`

smartsim-def-custom.o: componentdef/def-custom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-custom.o -MD -MP -MF $(DEPDIR)/smartsim-def-custom.Tpo -c -o smartsim-def-custom.o `test -f 'componentdef/def-custom.c' || echo '$(srcdir)/'`componentdef/def-custom.c
	$(am__mv) $(DEPDIR)/smartsim-def-custom.Tpo $(DEPDIR)/smartsim-def-custom.Po
#	source='componentdef/def-custom.c' object='smartsim-def-custom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-custom.o `test -f 'componentdef/def-custom.c' || echo '$(srcdir)/'`componentdef/def-custom.c

smartsim-def-custom.obj: componentdef/def-custom.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-custom.obj -MD -MP -MF $(DEPDIR)/smartsim-def-custom.Tpo -c -o smartsim-def-custom.obj `if test -f 'componentdef/def-custom.c'; then $(CYGPATH_W) 'componentdef/def-custom.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-custom.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-custom.Tpo $(DEPDIR)/smartsim-def-custom.Po
#	source='componentdef/def-custom.c' object='smartsim-def-custom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-custom.obj `if test -f 'componentdef/def-custom.c'; then $(CYGPATH_W) 'componentdef/def-custom.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-custom.c'; fi`

smartsim-def-memory.o: componentdef/def-memory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-memory.o -MD -MP -MF $(DEPDIR)/smartsim-def-memory.Tpo -c -o smartsim-def-memory.o `test -f 'componentdef/def-memory.c' || echo '$(srcdir)/'`componentdef/def-memory.c
	$(am__mv) $(DEPDIR)/smartsim-def-memory.Tpo $(DEPDIR)/smartsim-def-memory.Po
#	source='componentdef/def-memory.c' object='smartsim-def-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-memory.o `test -f 'componentdef/def-memory.c' || echo '$(srcdir)/'`componentdef/def-memory.c

smartsim-def-memory.obj: componentdef/def-memory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-memory.obj -MD -MP -MF $(DEPDIR)/smartsim-def-memory.Tpo -c -o smartsim-def-memory.obj `if test -f 'componentdef/def-memory.c'; then $(CYGPATH_W) 'componentdef/def-memory.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-memory.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-memory.Tpo $(DEPDIR)/smartsim-def-memory.Po
#	source='componentdef/def-memory.c' object='smartsim-def-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-memory.obj `if test -f 'componentdef/def-memory.c'; then $(CYGPATH_W) 'componentdef/def-memory.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-memory.c'; fi`

smartsim-def-multiplexer.o: componentdef/def-multiplexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-multiplexer.o -MD -MP -MF $(DEPDIR)/smartsim-def-multiplexer.Tpo -c -o smartsim-def-multiplexer.o `test -f 'componentdef/def-multiplexer.c' || echo '$(srcdir)/'`componentdef/def-multiplexer.c
	$(am__mv) $(DEPDIR)/smartsim-def-multiplexer.Tpo $(DEPDIR)/smartsim-def-multiplexer.Po
#	source='componentdef/def-multiplexer.c' object='smartsim-def-multiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-multiplexer.o `test -f 'componentdef/def-multiplexer.c' || echo '$(srcdir)/'`componentdef/def-multiplexer.c

smartsim-def-multiplexer.obj: componentdef/def-multiplexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-multiplexer.obj -MD -MP -MF $(DEPDIR)/smartsim-def-multiplexer.Tpo -c -o smartsim-def-multiplexer.obj `if test -f 'componentdef/def-multiplexer.c'; then $(CYGPATH_W) 'componentdef/def-multiplexer.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-multiplexer.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-multiplexer.Tpo $(DEPDIR)/smartsim-def-multiplexer.Po
#	source='componentdef/def-multiplexer.c' object='smartsim-def-multiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-multiplexer.obj `if test -f 'componentdef/def-multiplexer.c'; then $(CYGPATH_W) 'componentdef/def-multiplexer.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-multiplexer.c'; fi`

smartsim-def-or.o: componentdef/def-or.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-or.o -MD -MP -MF $(DEPDIR)/smartsim-def-or.Tpo -c -o smartsim-def-or.o `test -f 'componentdef/def-or.c' || echo '$(srcdir)/'`componentdef/def-or.c
	$(am__mv) $(DEPDIR)/smartsim-def-or.Tpo $(DEPDIR)/smartsim-def-or.Po
#	source='componentdef/def-or.c' object='smartsim-def-or.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-or.o `test -f 'componentdef/def-or.c' || echo '$(srcdir)/'`componentdef/def-or.c

smartsim-def-or.obj: componentdef/def-or.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-or.obj -MD -MP -MF $(DEPDIR)/smartsim-def-or.Tpo -c -o smartsim-def-or.obj `if test -f 'componentdef/def-or.c'; then $(CYGPATH_W) 'componentdef/def-or.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-or.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-or.Tpo $(DEPDIR)/smartsim-def-or.Po
#	source='componentdef/def-or.c' object='smartsim-def-or.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-or.obj `if test -f 'componentdef/def-or.c'; then $(CYGPATH_W) 'componentdef/def-or.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-or.c'; fi`

smartsim-def-pe-d-flipflop.o: componentdef/def-pe-d-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-pe-d-flipflop.o -MD -MP -MF $(DEPDIR)/smartsim-def-pe-d-flipflop.Tpo -c -o smartsim-def-pe-d-flipflop.o `test -f 'componentdef/def-pe-d-flipflop.c' || echo '$(srcdir)/'`componentdef/def-pe-d-flipflop.c
	$(am__mv) $(DEPDIR)/smartsim-def-pe-d-flipflop.Tpo $(DEPDIR)/smartsim-def-pe-d-flipflop.Po
#	source='componentdef/def-pe-d-flipflop.c' object='smartsim-def-pe-d-flipflop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-pe-d-flipflop.o `test -f 'componentdef/def-pe-d-flipflop.c' || echo '$(srcdir)/'`componentdef/def-pe-d-flipflop.c

smartsim-def-pe-d-flipflop.obj: componentdef/def-pe-d-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-pe-d-flipflop.obj -MD -MP -MF $(DEPDIR)/smartsim-def-pe-d-flipflop.Tpo -c -o smartsim-def-pe-d-flipflop.obj `if test -f 'componentdef/def-pe-d-flipflop.c'; then $(CYGPATH_W) 'componentdef/def-pe-d-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-pe-d-flipflop.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-pe-d-flipflop.Tpo $(DEPDIR)/smartsim-def-pe-d-flipflop.Po
#	source='componentdef/def-pe-d-flipflop.c' object='smartsim-def-pe-d-flipflop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-pe-d-flipflop.obj `if test -f 'componentdef/def-pe-d-flipflop.c'; then $(CYGPATH_W) 'componentdef/def-pe-d-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-pe-d-flipflop.c'; fi`

smartsim-def-plugin.o: componentdef/def-plugin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-plugin.o -MD -MP -MF $(DEPDIR)/smartsim-def-plugin.Tpo -c -o smartsim-def-plugin.o `test -f 'componentdef/def-plugin.c' || echo '$(srcdir)/'`componentdef/def-plugin.c
	$(am__mv) $(DEPDIR)/smartsim-def-plugin.Tpo $(DEPDIR)/smartsim-def-plugin.Po
#	source='componentdef/def-plugin.c' object='smartsim-def-plugin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-plugin.o `test -f 'componentdef/def-plugin.c' || echo '$(srcdir)/'`componentdef/def-plugin.c

smartsim-def-plugin.obj: componentdef/def-plugin.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-plugin.obj -MD -MP -MF $(DEPDIR)/smartsim-def-plugin.Tpo -c -o smartsim-def-plugin.obj `if test -f 'componentdef/def-plugin.c'; then $(CYGPATH_W) 'componentdef/def-plugin.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-plugin.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-plugin.Tpo $(DEPDIR)/smartsim-def-plugin.Po
#	source='componentdef/def-plugin.c' object='smartsim-def-plugin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-plugin.obj `if test -f 'componentdef/def-plugin.c'; then $(CYGPATH_W) 'componentdef/def-plugin.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-plugin.c'; fi`

smartsim-def-reader.o: componentdef/def-reader.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-reader.o -MD -MP -MF $(DEPDIR)/smartsim-def-reader.Tpo -c -o smartsim-def-reader.o `test -f 'componentdef/def-reader.c' || echo '$(srcdir)/'`componentdef/def-reader.c
	$(am__mv) $(DEPDIR)/smartsim-def-reader.Tpo $(DEPDIR)/smartsim-def-reader.Po
#	source='componentdef/def-reader.c' object='smartsim-def-reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-reader.o `test -f 'componentdef/def-reader.c' || echo '$(srcdir)/'`componentdef/def-reader.c

smartsim-def-reader.obj: componentdef/def-reader.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-reader.obj -MD -MP -MF $(DEPDIR)/smartsim-def-reader.Tpo -c -o smartsim-def-reader.obj `if test -f 'componentdef/def-reader.c'; then $(CYGPATH_W) 'componentdef/def-reader.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-reader.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-reader.Tpo $(DEPDIR)/smartsim-def-reader.Po
#	source='componentdef/def-reader.c' object='smartsim-def-reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-reader.obj `if test -f 'componentdef/def-reader.c'; then $(CYGPATH_W) 'componentdef/def-reader.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-reader.c'; fi`

smartsim-def-t-flipflop.o: componentdef/def-t-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-t-flipflop.o -MD -MP -MF $(DEPDIR)/smartsim-def-t-flipflop.Tpo -c -o smartsim-def-t-flipflop.o `test -f 'componentdef/def-t-flipflop.c' || echo '$(srcdir)/'`componentdef/def-t-flipflop.c
	$(am__mv) $(DEPDIR)/smartsim-def-t-flipflop.Tpo $(DEPDIR)/smartsim-def-t-flipflop.Po
#	source='componentdef/def-t-flipflop.c' object='smartsim-def-t-flipflop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-t-flipflop.o `test -f 'componentdef/def-t-flipflop.c' || echo '$(srcdir)/'`componentdef/def-t-flipflop.c

smartsim-def-t-flipflop.obj: componentdef/def-t-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-t-flipflop.obj -MD -MP -MF $(DEPDIR)/smartsim-def-t-flipflop.Tpo -c -o smartsim-def-t-flipflop.obj `if test -f 'componentdef/def-t-flipflop.c'; then $(CYGPATH_W) 'componentdef/def-t-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-t-flipflop.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-t-flipflop.Tpo $(DEPDIR)/smartsim-def-t-flipflop.Po
#	source='componentdef/def-t-flipflop.c' object='smartsim-def-t-flipflop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-t-flipflop.obj `if test -f 'componentdef/def-t-flipflop.c'; then $(CYGPATH_W) 'componentdef/def-t-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-t-flipflop.c'; fi`

smartsim-def-toggle.o: componentdef/def-toggle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-toggle.o -MD -MP -MF $(DEPDIR)/smartsim-def-toggle.Tpo -c -o smartsim-def-toggle.o `test -f 'componentdef/def-toggle.c' || echo '$(srcdir)/'`componentdef/def-toggle.c
	$(am__mv) $(DEPDIR)/smartsim-def-toggle.Tpo $(DEPDIR)/smartsim-def-toggle.Po
#	source='componentdef/def-toggle.c' object='smartsim-def-toggle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-toggle.o `test -f 'componentdef/def-toggle.c' || echo '$(srcdir)/'`componentdef/def-toggle.c

smartsim-def-toggle.obj: componentdef/def-toggle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-toggle.obj -MD -MP -MF $(DEPDIR)/smartsim-def-toggle.Tpo -c -o smartsim-def-toggle.obj `if test -f 'componentdef/def-toggle.c'; then $(CYGPATH_W) 'componentdef/def-toggle.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-toggle.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-toggle.Tpo $(DEPDIR)/smartsim-def-toggle.Po
#	source='componentdef/def-toggle.c' object='smartsim-def-toggle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-toggle.obj `if test -f 'componentdef/def-toggle.c'; then $(CYGPATH_W) 'componentdef/def-toggle.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-toggle.c'; fi`

smartsim-def-tristate.o: componentdef/def-tristate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-tristate.o -MD -MP -MF $(DEPDIR)/smartsim-def-tristate.Tpo -c -o smartsim-def-tristate.o `test -f 'componentdef/def-tristate.c' || echo '$(srcdir)/'`componentdef/def-tristate.c
	$(am__mv) $(DEPDIR)/smartsim-def-tristate.Tpo $(DEPDIR)/smartsim-def-tristate.Po
#	source='componentdef/def-tristate.c' object='smartsim-def-tristate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-tristate.o `test -f 'componentdef/def-tristate.c' || echo '$(srcdir)/'`componentdef/def-tristate.c

smartsim-def-tristate.obj: componentdef/def-tristate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-tristate.obj -MD -MP -MF $(DEPDIR)/smartsim-def-tristate.Tpo -c -o smartsim-def-tristate.obj `if test -f 'componentdef/def-tristate.c'; then $(CYGPATH_W) 'componentdef/def-tristate.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-tristate.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-tristate.Tpo $(DEPDIR)/smartsim-def-tristate.Po
#	source='componentdef/def-tristate.c' object='smartsim-def-tristate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-tristate.obj `if test -f 'componentdef/def-tristate.c'; then $(CYGPATH_W) 'componentdef/def-tristate.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-tristate.c'; fi`

smartsim-def-xor.o: componentdef/def-xor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-xor.o -MD -MP -MF $(DEPDIR)/smartsim-def-xor.Tpo -c -o smartsim-def-xor.o `test -f 'componentdef/def-xor.c' || echo '$(srcdir)/'`componentdef/def-xor.c
	$(am__mv) $(DEPDIR)/smartsim-def-xor.Tpo $(DEPDIR)/smartsim-def-xor.Po
#	source='componentdef/def-xor.c' object='smartsim-def-xor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-xor.o `test -f 'componentdef/def-xor.c' || echo '$(srcdir)/'`componentdef/def-xor.c

smartsim-def-xor.obj: componentdef/def-xor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-def-xor.obj -MD -MP -MF $(DEPDIR)/smartsim-def-xor.Tpo -c -o smartsim-def-xor.obj `if test -f 'componentdef/def-xor.c'; then $(CYGPATH_W) 'componentdef/def-xor.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-xor.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-def-xor.Tpo $(DEPDIR)/smartsim-def-xor.Po
#	source='componentdef/def-xor.c' object='smartsim-def-xor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-def-xor.obj `if test -f 'componentdef/def-xor.c'; then $(CYGPATH_W) 'componentdef/def-xor.c'; else $(CYGPATH_W) '$(srcdir)/componentdef/def-xor.c'; fi`

smartsim-componentstate.o: componentstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentstate.o -MD -MP -MF $(DEPDIR)/smartsim-componentstate.Tpo -c -o smartsim-componentstate.o `test -f 'componentstate.c' || echo '$(srcdir)/'`componentstate.c
	$(am__mv) $(DEPDIR)/smartsim-componentstate.Tpo $(DEPDIR)/smartsim-componentstate.Po
#	source='componentstate.c' object='smartsim-componentstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentstate.o `test -f 'componentstate.c' || echo '$(srcdir)/'`componentstate.c

smartsim-componentstate.obj: componentstate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentstate.obj -MD -MP -MF $(DEPDIR)/smartsim-componentstate.Tpo -c -o smartsim-componentstate.obj `if test -f 'componentstate.c'; then $(CYGPATH_W) 'componentstate.c'; else $(CYGPATH_W) '$(srcdir)/componentstate.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-componentstate.Tpo $(DEPDIR)/smartsim-componentstate.Po
#	source='componentstate.c' object='smartsim-componentstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentstate.obj `if test -f 'componentstate.c'; then $(CYGPATH_W) 'componentstate.c'; else $(CYGPATH_W) '$(srcdir)/componentstate.c'; fi`

smartsim-state-and.o: componentstate/state-and.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-and.o -MD -MP -MF $(DEPDIR)/smartsim-state-and.Tpo -c -o smartsim-state-and.o `test -f 'componentstate/state-and.c' || echo '$(srcdir)/'`componentstate/state-and.c
	$(am__mv) $(DEPDIR)/smartsim-state-and.Tpo $(DEPDIR)/smartsim-state-and.Po
#	source='componentstate/state-and.c' object='smartsim-state-and.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-and.o `test -f 'componentstate/state-and.c' || echo '$(srcdir)/'`componentstate/state-and.c

smartsim-state-and.obj: componentstate/state-and.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-and.obj -MD -MP -MF $(DEPDIR)/smartsim-state-and.Tpo -c -o smartsim-state-and.obj `if test -f 'componentstate/state-and.c'; then $(CYGPATH_W) 'componentstate/state-and.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-and.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-and.Tpo $(DEPDIR)/smartsim-state-and.Po
#	source='componentstate/state-and.c' object='smartsim-state-and.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-and.obj `if test -f 'componentstate/state-and.c'; then $(CYGPATH_W) 'componentstate/state-and.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-and.c'; fi`

smartsim-state-basic-ss-display.o: componentstate/state-basic-ss-display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-basic-ss-display.o -MD -MP -MF $(DEPDIR)/smartsim-state-basic-ss-display.Tpo -c -o smartsim-state-basic-ss-display.o `test -f 'componentstate/state-basic-ss-display.c' || echo '$(srcdir)/'`componentstate/state-basic-ss-display.c
	$(am__mv) $(DEPDIR)/smartsim-state-basic-ss-display.Tpo $(DEPDIR)/smartsim-state-basic-ss-display.Po
#	source='componentstate/state-basic-ss-display.c' object='smartsim-state-basic-ss-display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-basic-ss-display.o `test -f 'componentstate/state-basic-ss-display.c' || echo '$(srcdir)/'`componentstate/state-basic-ss-display.c

smartsim-state-basic-ss-display.obj: componentstate/state-basic-ss-display.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-basic-ss-display.obj -MD -MP -MF $(DEPDIR)/smartsim-state-basic-ss-display.Tpo -c -o smartsim-state-basic-ss-display.obj `if test -f 'componentstate/state-basic-ss-display.c'; then $(CYGPATH_W) 'componentstate/state-basic-ss-display.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-basic-ss-display.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-basic-ss-display.Tpo $(DEPDIR)/smartsim-state-basic-ss-display.Po
#	source='componentstate/state-basic-ss-display.c' object='smartsim-state-basic-ss-display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-basic-ss-display.obj `if test -f 'componentstate/state-basic-ss-display.c'; then $(CYGPATH_W) 'componentstate/state-basic-ss-display.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-basic-ss-display.c'; fi`

smartsim-state-buffer.o: componentstate/state-buffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-buffer.o -MD -MP -MF $(DEPDIR)/smartsim-state-buffer.Tpo -c -o smartsim-state-buffer.o `test -f 'componentstate/state-buffer.c' || echo '$(srcdir)/'`componentstate/state-buffer.c
	$(am__mv) $(DEPDIR)/smartsim-state-buffer.Tpo $(DEPDIR)/smartsim-state-buffer.Po
#	source='componentstate/state-buffer.c' object='smartsim-state-buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-buffer.o `test -f 'componentstate/state-buffer.c' || echo '$(srcdir)/'`componentstate/state-buffer.c

smartsim-state-buffer.obj: componentstate/state-buffer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-buffer.obj -MD -MP -MF $(DEPDIR)/smartsim-state-buffer.Tpo -c -o smartsim-state-buffer.obj `if test -f 'componentstate/state-buffer.c'; then $(CYGPATH_W) 'componentstate/state-buffer.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-buffer.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-buffer.Tpo $(DEPDIR)/smartsim-state-buffer.Po
#	source='componentstate/state-buffer.c' object='smartsim-state-buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-buffer.obj `if test -f 'componentstate/state-buffer.c'; then $(CYGPATH_W) 'componentstate/state-buffer.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-buffer.c'; fi`

smartsim-state-clock.o: componentstate/state-clock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-clock.o -MD -MP -MF $(DEPDIR)/smartsim-state-clock.Tpo -c -o smartsim-state-clock.o `test -f 'componentstate/state-clock.c' || echo '$(srcdir)/'`componentstate/state-clock.c
	$(am__mv) $(DEPDIR)/smartsim-state-clock.Tpo $(DEPDIR)/smartsim-state-clock.Po
#	source='componentstate/state-clock.c' object='smartsim-state-clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-clock.o `test -f 'componentstate/state-clock.c' || echo '$(srcdir)/'`componentstate/state-clock.c

smartsim-state-clock.obj: componentstate/state-clock.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-clock.obj -MD -MP -MF $(DEPDIR)/smartsim-state-clock.Tpo -c -o smartsim-state-clock.obj `if test -f 'componentstate/state-clock.c'; then $(CYGPATH_W) 'componentstate/state-clock.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-clock.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-clock.Tpo $(DEPDIR)/smartsim-state-clock.Po
#	source='componentstate/state-clock.c' object='smartsim-state-clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-clock.obj `if test -f 'componentstate/state-clock.c'; then $(CYGPATH_W) 'componentstate/state-clock.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-clock.c'; fi`

smartsim-state-constant.o: componentstate/state-constant.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-constant.o -MD -MP -MF $(DEPDIR)/smartsim-state-constant.Tpo -c -o smartsim-state-constant.o `test -f 'componentstate/state-constant.c' || echo '$(srcdir)/'`componentstate/state-constant.c
	$(am__mv) $(DEPDIR)/smartsim-state-constant.Tpo $(DEPDIR)/smartsim-state-constant.Po
#	source='componentstate/state-constant.c' object='smartsim-state-constant.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-constant.o `test -f 'componentstate/state-constant.c' || echo '$(srcdir)/'`componentstate/state-constant.c

smartsim-state-constant.obj: componentstate/state-constant.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-constant.obj -MD -MP -MF $(DEPDIR)/smartsim-state-constant.Tpo -c -o smartsim-state-constant.obj `if test -f 'componentstate/state-constant.c'; then $(CYGPATH_W) 'componentstate/state-constant.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-constant.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-constant.Tpo $(DEPDIR)/smartsim-state-constant.Po
#	source='componentstate/state-constant.c' object='smartsim-state-constant.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-constant.obj `if test -f 'componentstate/state-constant.c'; then $(CYGPATH_W) 'componentstate/state-constant.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-constant.c'; fi`

smartsim-state-memory.o: componentstate/state-memory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-memory.o -MD -MP -MF $(DEPDIR)/smartsim-state-memory.Tpo -c -o smartsim-state-memory.o `test -f 'componentstate/state-memory.c' || echo '$(srcdir)/'`componentstate/state-memory.c
	$(am__mv) $(DEPDIR)/smartsim-state-memory.Tpo $(DEPDIR)/smartsim-state-memory.Po
#	source='componentstate/state-memory.c' object='smartsim-state-memory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-memory.o `test -f 'componentstate/state-memory.c' || echo '$(srcdir)/'`componentstate/state-memory.c

smartsim-state-memory.obj: componentstate/state-memory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-memory.obj -MD -MP -MF $(DEPDIR)/smartsim-state-memory.Tpo -c -o smartsim-state-memory.obj `if test -f 'componentstate/state-memory.c'; then $(CYGPATH_W) 'componentstate/state-memory.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-memory.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-memory.Tpo $(DEPDIR)/smartsim-state-memory.Po
#	source='componentstate/state-memory.c' object='smartsim-state-memory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-memory.obj `if test -f 'componentstate/state-memory.c'; then $(CYGPATH_W) 'componentstate/state-memory.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-memory.c'; fi`

smartsim-state-multiplexer.o: componentstate/state-multiplexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-multiplexer.o -MD -MP -MF $(DEPDIR)/smartsim-state-multiplexer.Tpo -c -o smartsim-state-multiplexer.o `test -f 'componentstate/state-multiplexer.c' || echo '$(srcdir)/'`componentstate/state-multiplexer.c
	$(am__mv) $(DEPDIR)/smartsim-state-multiplexer.Tpo $(DEPDIR)/smartsim-state-multiplexer.Po
#	source='componentstate/state-multiplexer.c' object='smartsim-state-multiplexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-multiplexer.o `test -f 'componentstate/state-multiplexer.c' || echo '$(srcdir)/'`componentstate/state-multiplexer.c

smartsim-state-multiplexer.obj: componentstate/state-multiplexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-multiplexer.obj -MD -MP -MF $(DEPDIR)/smartsim-state-multiplexer.Tpo -c -o smartsim-state-multiplexer.obj `if test -f 'componentstate/state-multiplexer.c'; then $(CYGPATH_W) 'componentstate/state-multiplexer.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-multiplexer.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-multiplexer.Tpo $(DEPDIR)/smartsim-state-multiplexer.Po
#	source='componentstate/state-multiplexer.c' object='smartsim-state-multiplexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-multiplexer.obj `if test -f 'componentstate/state-multiplexer.c'; then $(CYGPATH_W) 'componentstate/state-multiplexer.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-multiplexer.c'; fi`

smartsim-state-or.o: componentstate/state-or.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-or.o -MD -MP -MF $(DEPDIR)/smartsim-state-or.Tpo -c -o smartsim-state-or.o `test -f 'componentstate/state-or.c' || echo '$(srcdir)/'`componentstate/state-or.c
	$(am__mv) $(DEPDIR)/smartsim-state-or.Tpo $(DEPDIR)/smartsim-state-or.Po
#	source='componentstate/state-or.c' object='smartsim-state-or.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-or.o `test -f 'componentstate/state-or.c' || echo '$(srcdir)/'`componentstate/state-or.c

smartsim-state-or.obj: componentstate/state-or.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-or.obj -MD -MP -MF $(DEPDIR)/smartsim-state-or.Tpo -c -o smartsim-state-or.obj `if test -f 'componentstate/state-or.c'; then $(CYGPATH_W) 'componentstate/state-or.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-or.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-or.Tpo $(DEPDIR)/smartsim-state-or.Po
#	source='componentstate/state-or.c' object='smartsim-state-or.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-or.obj `if test -f 'componentstate/state-or.c'; then $(CYGPATH_W) 'componentstate/state-or.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-or.c'; fi`

smartsim-state-pe-d-flipflop.o: componentstate/state-pe-d-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-pe-d-flipflop.o -MD -MP -MF $(DEPDIR)/smartsim-state-pe-d-flipflop.Tpo -c -o smartsim-state-pe-d-flipflop.o `test -f 'componentstate/state-pe-d-flipflop.c' || echo '$(srcdir)/'`componentstate/state-pe-d-flipflop.c
	$(am__mv) $(DEPDIR)/smartsim-state-pe-d-flipflop.Tpo $(DEPDIR)/smartsim-state-pe-d-flipflop.Po
#	source='componentstate/state-pe-d-flipflop.c' object='smartsim-state-pe-d-flipflop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-pe-d-flipflop.o `test -f 'componentstate/state-pe-d-flipflop.c' || echo '$(srcdir)/'`componentstate/state-pe-d-flipflop.c

smartsim-state-pe-d-flipflop.obj: componentstate/state-pe-d-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-pe-d-flipflop.obj -MD -MP -MF $(DEPDIR)/smartsim-state-pe-d-flipflop.Tpo -c -o smartsim-state-pe-d-flipflop.obj `if test -f 'componentstate/state-pe-d-flipflop.c'; then $(CYGPATH_W) 'componentstate/state-pe-d-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-pe-d-flipflop.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-pe-d-flipflop.Tpo $(DEPDIR)/smartsim-state-pe-d-flipflop.Po
#	source='componentstate/state-pe-d-flipflop.c' object='smartsim-state-pe-d-flipflop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-pe-d-flipflop.obj `if test -f 'componentstate/state-pe-d-flipflop.c'; then $(CYGPATH_W) 'componentstate/state-pe-d-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-pe-d-flipflop.c'; fi`

smartsim-state-reader.o: componentstate/state-reader.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-reader.o -MD -MP -MF $(DEPDIR)/smartsim-state-reader.Tpo -c -o smartsim-state-reader.o `test -f 'componentstate/state-reader.c' || echo '$(srcdir)/'`componentstate/state-reader.c
	$(am__mv) $(DEPDIR)/smartsim-state-reader.Tpo $(DEPDIR)/smartsim-state-reader.Po
#	source='componentstate/state-reader.c' object='smartsim-state-reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-reader.o `test -f 'componentstate/state-reader.c' || echo '$(srcdir)/'`componentstate/state-reader.c

smartsim-state-reader.obj: componentstate/state-reader.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-reader.obj -MD -MP -MF $(DEPDIR)/smartsim-state-reader.Tpo -c -o smartsim-state-reader.obj `if test -f 'componentstate/state-reader.c'; then $(CYGPATH_W) 'componentstate/state-reader.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-reader.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-reader.Tpo $(DEPDIR)/smartsim-state-reader.Po
#	source='componentstate/state-reader.c' object='smartsim-state-reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-reader.obj `if test -f 'componentstate/state-reader.c'; then $(CYGPATH_W) 'componentstate/state-reader.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-reader.c'; fi`

smartsim-state-t-flipflop.o: componentstate/state-t-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-t-flipflop.o -MD -MP -MF $(DEPDIR)/smartsim-state-t-flipflop.Tpo -c -o smartsim-state-t-flipflop.o `test -f 'componentstate/state-t-flipflop.c' || echo '$(srcdir)/'`componentstate/state-t-flipflop.c
	$(am__mv) $(DEPDIR)/smartsim-state-t-flipflop.Tpo $(DEPDIR)/smartsim-state-t-flipflop.Po
#	source='componentstate/state-t-flipflop.c' object='smartsim-state-t-flipflop.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-t-flipflop.o `test -f 'componentstate/state-t-flipflop.c' || echo '$(srcdir)/'`componentstate/state-t-flipflop.c

smartsim-state-t-flipflop.obj: componentstate/state-t-flipflop.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-t-flipflop.obj -MD -MP -MF $(DEPDIR)/smartsim-state-t-flipflop.Tpo -c -o smartsim-state-t-flipflop.obj `if test -f 'componentstate/state-t-flipflop.c'; then $(CYGPATH_W) 'componentstate/state-t-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-t-flipflop.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-t-flipflop.Tpo $(DEPDIR)/smartsim-state-t-flipflop.Po
#	source='componentstate/state-t-flipflop.c' object='smartsim-state-t-flipflop.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-t-flipflop.obj `if test -f 'componentstate/state-t-flipflop.c'; then $(CYGPATH_W) 'componentstate/state-t-flipflop.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-t-flipflop.c'; fi`

smartsim-state-toggle.o: componentstate/state-toggle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-toggle.o -MD -MP -MF $(DEPDIR)/smartsim-state-toggle.Tpo -c -o smartsim-state-toggle.o `test -f 'componentstate/state-toggle.c' || echo '$(srcdir)/'`componentstate/state-toggle.c
	$(am__mv) $(DEPDIR)/smartsim-state-toggle.Tpo $(DEPDIR)/smartsim-state-toggle.Po
#	source='componentstate/state-toggle.c' object='smartsim-state-toggle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-toggle.o `test -f 'componentstate/state-toggle.c' || echo '$(srcdir)/'`componentstate/state-toggle.c

smartsim-state-toggle.obj: componentstate/state-toggle.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-toggle.obj -MD -MP -MF $(DEPDIR)/smartsim-state-toggle.Tpo -c -o smartsim-state-toggle.obj `if test -f 'componentstate/state-toggle.c'; then $(CYGPATH_W) 'componentstate/state-toggle.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-toggle.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-toggle.Tpo $(DEPDIR)/smartsim-state-toggle.Po
#	source='componentstate/state-toggle.c' object='smartsim-state-toggle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-toggle.obj `if test -f 'componentstate/state-toggle.c'; then $(CYGPATH_W) 'componentstate/state-toggle.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-toggle.c'; fi`

smartsim-state-tristate.o: componentstate/state-tristate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-tristate.o -MD -MP -MF $(DEPDIR)/smartsim-state-tristate.Tpo -c -o smartsim-state-tristate.o `test -f 'componentstate/state-tristate.c' || echo '$(srcdir)/'`componentstate/state-tristate.c
	$(am__mv) $(DEPDIR)/smartsim-state-tristate.Tpo $(DEPDIR)/smartsim-state-tristate.Po
#	source='componentstate/state-tristate.c' object='smartsim-state-tristate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-tristate.o `test -f 'componentstate/state-tristate.c' || echo '$(srcdir)/'`componentstate/state-tristate.c

smartsim-state-tristate.obj: componentstate/state-tristate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-tristate.obj -MD -MP -MF $(DEPDIR)/smartsim-state-tristate.Tpo -c -o smartsim-state-tristate.obj `if test -f 'componentstate/state-tristate.c'; then $(CYGPATH_W) 'componentstate/state-tristate.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-tristate.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-tristate.Tpo $(DEPDIR)/smartsim-state-tristate.Po
#	source='componentstate/state-tristate.c' object='smartsim-state-tristate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-tristate.obj `if test -f 'componentstate/state-tristate.c'; then $(CYGPATH_W) 'componentstate/state-tristate.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-tristate.c'; fi`

smartsim-state-xor.o: componentstate/state-xor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-xor.o -MD -MP -MF $(DEPDIR)/smartsim-state-xor.Tpo -c -o smartsim-state-xor.o `test -f 'componentstate/state-xor.c' || echo '$(srcdir)/'`componentstate/state-xor.c
	$(am__mv) $(DEPDIR)/smartsim-state-xor.Tpo $(DEPDIR)/smartsim-state-xor.Po
#	source='componentstate/state-xor.c' object='smartsim-state-xor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-xor.o `test -f 'componentstate/state-xor.c' || echo '$(srcdir)/'`componentstate/state-xor.c

smartsim-state-xor.obj: componentstate/state-xor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-state-xor.obj -MD -MP -MF $(DEPDIR)/smartsim-state-xor.Tpo -c -o smartsim-state-xor.obj `if test -f 'componentstate/state-xor.c'; then $(CYGPATH_W) 'componentstate/state-xor.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-xor.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-state-xor.Tpo $(DEPDIR)/smartsim-state-xor.Po
#	source='componentstate/state-xor.c' object='smartsim-state-xor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-state-xor.obj `if test -f 'componentstate/state-xor.c'; then $(CYGPATH_W) 'componentstate/state-xor.c'; else $(CYGPATH_W) '$(srcdir)/componentstate/state-xor.c'; fi`

smartsim-componentinst.o: componentinst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentinst.o -MD -MP -MF $(DEPDIR)/smartsim-componentinst.Tpo -c -o smartsim-componentinst.o `test -f 'componentinst.c' || echo '$(srcdir)/'`componentinst.c
	$(am__mv) $(DEPDIR)/smartsim-componentinst.Tpo $(DEPDIR)/smartsim-componentinst.Po
#	source='componentinst.c' object='smartsim-componentinst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentinst.o `test -f 'componentinst.c' || echo '$(srcdir)/'`componentinst.c

smartsim-componentinst.obj: componentinst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-componentinst.obj -MD -MP -MF $(DEPDIR)/smartsim-componentinst.Tpo -c -o smartsim-componentinst.obj `if test -f 'componentinst.c'; then $(CYGPATH_W) 'componentinst.c'; else $(CYGPATH_W) '$(srcdir)/componentinst.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-componentinst.Tpo $(DEPDIR)/smartsim-componentinst.Po
#	source='componentinst.c' object='smartsim-componentinst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-componentinst.obj `if test -f 'componentinst.c'; then $(CYGPATH_W) 'componentinst.c'; else $(CYGPATH_W) '$(srcdir)/componentinst.c'; fi`

smartsim-connection.o: connection.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-connection.o -MD -MP -MF $(DEPDIR)/smartsim-connection.Tpo -c -o smartsim-connection.o `test -f 'connection.c' || echo '$(srcdir)/'`connection.c
	$(am__mv) $(DEPDIR)/smartsim-connection.Tpo $(DEPDIR)/smartsim-connection.Po
#	source='connection.c' object='smartsim-connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-connection.o `test -f 'connection.c' || echo '$(srcdir)/'`connection.c

smartsim-connection.obj: connection.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-connection.obj -MD -MP -MF $(DEPDIR)/smartsim-connection.Tpo -c -o smartsim-connection.obj `if test -f 'connection.c'; then $(CYGPATH_W) 'connection.c'; else $(CYGPATH_W) '$(srcdir)/connection.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-connection.Tpo $(DEPDIR)/smartsim-connection.Po
#	source='connection.c' object='smartsim-connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-connection.obj `if test -f 'connection.c'; then $(CYGPATH_W) 'connection.c'; else $(CYGPATH_W) '$(srcdir)/connection.c'; fi`

smartsim-customiser.o: customiser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-customiser.o -MD -MP -MF $(DEPDIR)/smartsim-customiser.Tpo -c -o smartsim-customiser.o `test -f 'customiser.c' || echo '$(srcdir)/'`customiser.c
	$(am__mv) $(DEPDIR)/smartsim-customiser.Tpo $(DEPDIR)/smartsim-customiser.Po
#	source='customiser.c' object='smartsim-customiser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-customiser.o `test -f 'customiser.c' || echo '$(srcdir)/'`customiser.c

smartsim-customiser.obj: customiser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-customiser.obj -MD -MP -MF $(DEPDIR)/smartsim-customiser.Tpo -c -o smartsim-customiser.obj `if test -f 'customiser.c'; then $(CYGPATH_W) 'customiser.c'; else $(CYGPATH_W) '$(srcdir)/customiser.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-customiser.Tpo $(DEPDIR)/smartsim-customiser.Po
#	source='customiser.c' object='smartsim-customiser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-customiser.obj `if test -f 'customiser.c'; then $(CYGPATH_W) 'customiser.c'; else $(CYGPATH_W) '$(srcdir)/customiser.c'; fi`

smartsim-designer.o: designer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-designer.o -MD -MP -MF $(DEPDIR)/smartsim-designer.Tpo -c -o smartsim-designer.o `test -f 'designer.c' || echo '$(srcdir)/'`designer.c
	$(am__mv) $(DEPDIR)/smartsim-designer.Tpo $(DEPDIR)/smartsim-designer.Po
#	source='designer.c' object='smartsim-designer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-designer.o `test -f 'designer.c' || echo '$(srcdir)/'`designer.c

smartsim-designer.obj: designer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-designer.obj -MD -MP -MF $(DEPDIR)/smartsim-designer.Tpo -c -o smartsim-designer.obj `if test -f 'designer.c'; then $(CYGPATH_W) 'designer.c'; else $(CYGPATH_W) '$(srcdir)/designer.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-designer.Tpo $(DEPDIR)/smartsim-designer.Po
#	source='designer.c' object='smartsim-designer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-designer.obj `if test -f 'designer.c'; then $(CYGPATH_W) 'designer.c'; else $(CYGPATH_W) '$(srcdir)/designer.c'; fi`

smartsim-designerwindow.o: designerwindow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-designerwindow.o -MD -MP -MF $(DEPDIR)/smartsim-designerwindow.Tpo -c -o smartsim-designerwindow.o `test -f 'designerwindow.c' || echo '$(srcdir)/'`designerwindow.c
	$(am__mv) $(DEPDIR)/smartsim-designerwindow.Tpo $(DEPDIR)/smartsim-designerwindow.Po
#	source='designerwindow.c' object='smartsim-designerwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-designerwindow.o `test -f 'designerwindow.c' || echo '$(srcdir)/'`designerwindow.c

smartsim-designerwindow.obj: designerwindow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-designerwindow.obj -MD -MP -MF $(DEPDIR)/smartsim-designerwindow.Tpo -c -o smartsim-designerwindow.obj `if test -f 'designerwindow.c'; then $(CYGPATH_W) 'designerwindow.c'; else $(CYGPATH_W) '$(srcdir)/designerwindow.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-designerwindow.Tpo $(DEPDIR)/smartsim-designerwindow.Po
#	source='designerwindow.c' object='smartsim-designerwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-designerwindow.obj `if test -f 'designerwindow.c'; then $(CYGPATH_W) 'designerwindow.c'; else $(CYGPATH_W) '$(srcdir)/designerwindow.c'; fi`

smartsim-graphic.o: graphic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-graphic.o -MD -MP -MF $(DEPDIR)/smartsim-graphic.Tpo -c -o smartsim-graphic.o `test -f 'graphic.c' || echo '$(srcdir)/'`graphic.c
	$(am__mv) $(DEPDIR)/smartsim-graphic.Tpo $(DEPDIR)/smartsim-graphic.Po
#	source='graphic.c' object='smartsim-graphic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-graphic.o `test -f 'graphic.c' || echo '$(srcdir)/'`graphic.c

smartsim-graphic.obj: graphic.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-graphic.obj -MD -MP -MF $(DEPDIR)/smartsim-graphic.Tpo -c -o smartsim-graphic.obj `if test -f 'graphic.c'; then $(CYGPATH_W) 'graphic.c'; else $(CYGPATH_W) '$(srcdir)/graphic.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-graphic.Tpo $(DEPDIR)/smartsim-graphic.Po
#	source='graphic.c' object='smartsim-graphic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-graphic.obj `if test -f 'graphic.c'; then $(CYGPATH_W) 'graphic.c'; else $(CYGPATH_W) '$(srcdir)/graphic.c'; fi`

smartsim-imageexporter.o: imageexporter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-imageexporter.o -MD -MP -MF $(DEPDIR)/smartsim-imageexporter.Tpo -c -o smartsim-imageexporter.o `test -f 'imageexporter.c' || echo '$(srcdir)/'`imageexporter.c
	$(am__mv) $(DEPDIR)/smartsim-imageexporter.Tpo $(DEPDIR)/smartsim-imageexporter.Po
#	source='imageexporter.c' object='smartsim-imageexporter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-imageexporter.o `test -f 'imageexporter.c' || echo '$(srcdir)/'`imageexporter.c

smartsim-imageexporter.obj: imageexporter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-imageexporter.obj -MD -MP -MF $(DEPDIR)/smartsim-imageexporter.Tpo -c -o smartsim-imageexporter.obj `if test -f 'imageexporter.c'; then $(CYGPATH_W) 'imageexporter.c'; else $(CYGPATH_W) '$(srcdir)/imageexporter.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-imageexporter.Tpo $(DEPDIR)/smartsim-imageexporter.Po
#	source='imageexporter.c' object='smartsim-imageexporter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-imageexporter.obj `if test -f 'imageexporter.c'; then $(CYGPATH_W) 'imageexporter.c'; else $(CYGPATH_W) '$(srcdir)/imageexporter.c'; fi`

smartsim-path.o: path.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-path.o -MD -MP -MF $(DEPDIR)/smartsim-path.Tpo -c -o smartsim-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c
	$(am__mv) $(DEPDIR)/smartsim-path.Tpo $(DEPDIR)/smartsim-path.Po
#	source='path.c' object='smartsim-path.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-path.o `test -f 'path.c' || echo '$(srcdir)/'`path.c

smartsim-path.obj: path.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-path.obj -MD -MP -MF $(DEPDIR)/smartsim-path.Tpo -c -o smartsim-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-path.Tpo $(DEPDIR)/smartsim-path.Po
#	source='path.c' object='smartsim-path.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-path.obj `if test -f 'path.c'; then $(CYGPATH_W) 'path.c'; else $(CYGPATH_W) '$(srcdir)/path.c'; fi`

smartsim-pindef.o: pindef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-pindef.o -MD -MP -MF $(DEPDIR)/smartsim-pindef.Tpo -c -o smartsim-pindef.o `test -f 'pindef.c' || echo '$(srcdir)/'`pindef.c
	$(am__mv) $(DEPDIR)/smartsim-pindef.Tpo $(DEPDIR)/smartsim-pindef.Po
#	source='pindef.c' object='smartsim-pindef.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-pindef.o `test -f 'pindef.c' || echo '$(srcdir)/'`pindef.c

smartsim-pindef.obj: pindef.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-pindef.obj -MD -MP -MF $(DEPDIR)/smartsim-pindef.Tpo -c -o smartsim-pindef.obj `if test -f 'pindef.c'; then $(CYGPATH_W) 'pindef.c'; else $(CYGPATH_W) '$(srcdir)/pindef.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-pindef.Tpo $(DEPDIR)/smartsim-pindef.Po
#	source='pindef.c' object='smartsim-pindef.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-pindef.obj `if test -f 'pindef.c'; then $(CYGPATH_W) 'pindef.c'; else $(CYGPATH_W) '$(srcdir)/pindef.c'; fi`

smartsim-pininst.o: pininst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-pininst.o -MD -MP -MF $(DEPDIR)/smartsim-pininst.Tpo -c -o smartsim-pininst.o `test -f 'pininst.c' || echo '$(srcdir)/'`pininst.c
	$(am__mv) $(DEPDIR)/smartsim-pininst.Tpo $(DEPDIR)/smartsim-pininst.Po
#	source='pininst.c' object='smartsim-pininst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-pininst.o `test -f 'pininst.c' || echo '$(srcdir)/'`pininst.c

smartsim-pininst.obj: pininst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-pininst.obj -MD -MP -MF $(DEPDIR)/smartsim-pininst.Tpo -c -o smartsim-pininst.obj `if test -f 'pininst.c'; then $(CYGPATH_W) 'pininst.c'; else $(CYGPATH_W) '$(srcdir)/pininst.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-pininst.Tpo $(DEPDIR)/smartsim-pininst.Po
#	source='pininst.c' object='smartsim-pininst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-pininst.obj `if test -f 'pininst.c'; then $(CYGPATH_W) 'pininst.c'; else $(CYGPATH_W) '$(srcdir)/pininst.c'; fi`

smartsim-plugincomponentmanager.o: plugincomponentmanager.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-plugincomponentmanager.o -MD -MP -MF $(DEPDIR)/smartsim-plugincomponentmanager.Tpo -c -o smartsim-plugincomponentmanager.o `test -f 'plugincomponentmanager.c' || echo '$(srcdir)/'`plugincomponentmanager.c
	$(am__mv) $(DEPDIR)/smartsim-plugincomponentmanager.Tpo $(DEPDIR)/smartsim-plugincomponentmanager.Po
#	source='plugincomponentmanager.c' object='smartsim-plugincomponentmanager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-plugincomponentmanager.o `test -f 'plugincomponentmanager.c' || echo '$(srcdir)/'`plugincomponentmanager.c

smartsim-plugincomponentmanager.obj: plugincomponentmanager.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-plugincomponentmanager.obj -MD -MP -MF $(DEPDIR)/smartsim-plugincomponentmanager.Tpo -c -o smartsim-plugincomponentmanager.obj `if test -f 'plugincomponentmanager.c'; then $(CYGPATH_W) 'plugincomponentmanager.c'; else $(CYGPATH_W) '$(srcdir)/plugincomponentmanager.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-plugincomponentmanager.Tpo $(DEPDIR)/smartsim-plugincomponentmanager.Po
#	source='plugincomponentmanager.c' object='smartsim-plugincomponentmanager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-plugincomponentmanager.obj `if test -f 'plugincomponentmanager.c'; then $(CYGPATH_W) 'plugincomponentmanager.c'; else $(CYGPATH_W) '$(srcdir)/plugincomponentmanager.c'; fi`

smartsim-project.o: project.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-project.o -MD -MP -MF $(DEPDIR)/smartsim-project.Tpo -c -o smartsim-project.o `test -f 'project.c' || echo '$(srcdir)/'`project.c
	$(am__mv) $(DEPDIR)/smartsim-project.Tpo $(DEPDIR)/smartsim-project.Po
#	source='project.c' object='smartsim-project.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-project.o `test -f 'project.c' || echo '$(srcdir)/'`project.c

smartsim-project.obj: project.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-project.obj -MD -MP -MF $(DEPDIR)/smartsim-project.Tpo -c -o smartsim-project.obj `if test -f 'project.c'; then $(CYGPATH_W) 'project.c'; else $(CYGPATH_W) '$(srcdir)/project.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-project.Tpo $(DEPDIR)/smartsim-project.Po
#	source='project.c' object='smartsim-project.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-project.obj `if test -f 'project.c'; then $(CYGPATH_W) 'project.c'; else $(CYGPATH_W) '$(srcdir)/project.c'; fi`

smartsim-propertiesquery.o: propertiesquery.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertiesquery.o -MD -MP -MF $(DEPDIR)/smartsim-propertiesquery.Tpo -c -o smartsim-propertiesquery.o `test -f 'propertiesquery.c' || echo '$(srcdir)/'`propertiesquery.c
	$(am__mv) $(DEPDIR)/smartsim-propertiesquery.Tpo $(DEPDIR)/smartsim-propertiesquery.Po
#	source='propertiesquery.c' object='smartsim-propertiesquery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertiesquery.o `test -f 'propertiesquery.c' || echo '$(srcdir)/'`propertiesquery.c

smartsim-propertiesquery.obj: propertiesquery.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertiesquery.obj -MD -MP -MF $(DEPDIR)/smartsim-propertiesquery.Tpo -c -o smartsim-propertiesquery.obj `if test -f 'propertiesquery.c'; then $(CYGPATH_W) 'propertiesquery.c'; else $(CYGPATH_W) '$(srcdir)/propertiesquery.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertiesquery.Tpo $(DEPDIR)/smartsim-propertiesquery.Po
#	source='propertiesquery.c' object='smartsim-propertiesquery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertiesquery.obj `if test -f 'propertiesquery.c'; then $(CYGPATH_W) 'propertiesquery.c'; else $(CYGPATH_W) '$(srcdir)/propertiesquery.c'; fi`

smartsim-propertyitem.o: propertyitem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem.Tpo -c -o smartsim-propertyitem.o `test -f 'propertyitem.c' || echo '$(srcdir)/'`propertyitem.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem.Tpo $(DEPDIR)/smartsim-propertyitem.Po
#	source='propertyitem.c' object='smartsim-propertyitem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem.o `test -f 'propertyitem.c' || echo '$(srcdir)/'`propertyitem.c

smartsim-propertyitem.obj: propertyitem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem.Tpo -c -o smartsim-propertyitem.obj `if test -f 'propertyitem.c'; then $(CYGPATH_W) 'propertyitem.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem.Tpo $(DEPDIR)/smartsim-propertyitem.Po
#	source='propertyitem.c' object='smartsim-propertyitem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem.obj `if test -f 'propertyitem.c'; then $(CYGPATH_W) 'propertyitem.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem.c'; fi`

smartsim-propertyitem-double.o: propertyitem/propertyitem-double.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-double.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-double.Tpo -c -o smartsim-propertyitem-double.o `test -f 'propertyitem/propertyitem-double.c' || echo '$(srcdir)/'`propertyitem/propertyitem-double.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-double.Tpo $(DEPDIR)/smartsim-propertyitem-double.Po
#	source='propertyitem/propertyitem-double.c' object='smartsim-propertyitem-double.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-double.o `test -f 'propertyitem/propertyitem-double.c' || echo '$(srcdir)/'`propertyitem/propertyitem-double.c

smartsim-propertyitem-double.obj: propertyitem/propertyitem-double.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-double.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-double.Tpo -c -o smartsim-propertyitem-double.obj `if test -f 'propertyitem/propertyitem-double.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-double.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-double.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-double.Tpo $(DEPDIR)/smartsim-propertyitem-double.Po
#	source='propertyitem/propertyitem-double.c' object='smartsim-propertyitem-double.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-double.obj `if test -f 'propertyitem/propertyitem-double.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-double.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-double.c'; fi`

smartsim-propertyitem-file.o: propertyitem/propertyitem-file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-file.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-file.Tpo -c -o smartsim-propertyitem-file.o `test -f 'propertyitem/propertyitem-file.c' || echo '$(srcdir)/'`propertyitem/propertyitem-file.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-file.Tpo $(DEPDIR)/smartsim-propertyitem-file.Po
#	source='propertyitem/propertyitem-file.c' object='smartsim-propertyitem-file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-file.o `test -f 'propertyitem/propertyitem-file.c' || echo '$(srcdir)/'`propertyitem/propertyitem-file.c

smartsim-propertyitem-file.obj: propertyitem/propertyitem-file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-file.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-file.Tpo -c -o smartsim-propertyitem-file.obj `if test -f 'propertyitem/propertyitem-file.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-file.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-file.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-file.Tpo $(DEPDIR)/smartsim-propertyitem-file.Po
#	source='propertyitem/propertyitem-file.c' object='smartsim-propertyitem-file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-file.obj `if test -f 'propertyitem/propertyitem-file.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-file.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-file.c'; fi`

smartsim-propertyitem-int.o: propertyitem/propertyitem-int.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-int.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-int.Tpo -c -o smartsim-propertyitem-int.o `test -f 'propertyitem/propertyitem-int.c' || echo '$(srcdir)/'`propertyitem/propertyitem-int.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-int.Tpo $(DEPDIR)/smartsim-propertyitem-int.Po
#	source='propertyitem/propertyitem-int.c' object='smartsim-propertyitem-int.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-int.o `test -f 'propertyitem/propertyitem-int.c' || echo '$(srcdir)/'`propertyitem/propertyitem-int.c

smartsim-propertyitem-int.obj: propertyitem/propertyitem-int.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-int.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-int.Tpo -c -o smartsim-propertyitem-int.obj `if test -f 'propertyitem/propertyitem-int.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-int.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-int.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-int.Tpo $(DEPDIR)/smartsim-propertyitem-int.Po
#	source='propertyitem/propertyitem-int.c' object='smartsim-propertyitem-int.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-int.obj `if test -f 'propertyitem/propertyitem-int.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-int.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-int.c'; fi`

smartsim-propertyitem-propertyset.o: propertyitem/propertyitem-propertyset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-propertyset.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-propertyset.Tpo -c -o smartsim-propertyitem-propertyset.o `test -f 'propertyitem/propertyitem-propertyset.c' || echo '$(srcdir)/'`propertyitem/propertyitem-propertyset.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-propertyset.Tpo $(DEPDIR)/smartsim-propertyitem-propertyset.Po
#	source='propertyitem/propertyitem-propertyset.c' object='smartsim-propertyitem-propertyset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-propertyset.o `test -f 'propertyitem/propertyitem-propertyset.c' || echo '$(srcdir)/'`propertyitem/propertyitem-propertyset.c

smartsim-propertyitem-propertyset.obj: propertyitem/propertyitem-propertyset.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-propertyset.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-propertyset.Tpo -c -o smartsim-propertyitem-propertyset.obj `if test -f 'propertyitem/propertyitem-propertyset.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-propertyset.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-propertyset.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-propertyset.Tpo $(DEPDIR)/smartsim-propertyitem-propertyset.Po
#	source='propertyitem/propertyitem-propertyset.c' object='smartsim-propertyitem-propertyset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-propertyset.obj `if test -f 'propertyitem/propertyitem-propertyset.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-propertyset.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-propertyset.c'; fi`

smartsim-propertyitem-selection.o: propertyitem/propertyitem-selection.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-selection.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-selection.Tpo -c -o smartsim-propertyitem-selection.o `test -f 'propertyitem/propertyitem-selection.c' || echo '$(srcdir)/'`propertyitem/propertyitem-selection.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-selection.Tpo $(DEPDIR)/smartsim-propertyitem-selection.Po
#	source='propertyitem/propertyitem-selection.c' object='smartsim-propertyitem-selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-selection.o `test -f 'propertyitem/propertyitem-selection.c' || echo '$(srcdir)/'`propertyitem/propertyitem-selection.c

smartsim-propertyitem-selection.obj: propertyitem/propertyitem-selection.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-selection.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-selection.Tpo -c -o smartsim-propertyitem-selection.obj `if test -f 'propertyitem/propertyitem-selection.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-selection.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-selection.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-selection.Tpo $(DEPDIR)/smartsim-propertyitem-selection.Po
#	source='propertyitem/propertyitem-selection.c' object='smartsim-propertyitem-selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-selection.obj `if test -f 'propertyitem/propertyitem-selection.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-selection.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-selection.c'; fi`

smartsim-propertyitem-string.o: propertyitem/propertyitem-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-string.o -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-string.Tpo -c -o smartsim-propertyitem-string.o `test -f 'propertyitem/propertyitem-string.c' || echo '$(srcdir)/'`propertyitem/propertyitem-string.c
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-string.Tpo $(DEPDIR)/smartsim-propertyitem-string.Po
#	source='propertyitem/propertyitem-string.c' object='smartsim-propertyitem-string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-string.o `test -f 'propertyitem/propertyitem-string.c' || echo '$(srcdir)/'`propertyitem/propertyitem-string.c

smartsim-propertyitem-string.obj: propertyitem/propertyitem-string.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-propertyitem-string.obj -MD -MP -MF $(DEPDIR)/smartsim-propertyitem-string.Tpo -c -o smartsim-propertyitem-string.obj `if test -f 'propertyitem/propertyitem-string.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-string.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-string.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-propertyitem-string.Tpo $(DEPDIR)/smartsim-propertyitem-string.Po
#	source='propertyitem/propertyitem-string.c' object='smartsim-propertyitem-string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-propertyitem-string.obj `if test -f 'propertyitem/propertyitem-string.c'; then $(CYGPATH_W) 'propertyitem/propertyitem-string.c'; else $(CYGPATH_W) '$(srcdir)/propertyitem/propertyitem-string.c'; fi`

smartsim-simulatorwindow.o: simulatorwindow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-simulatorwindow.o -MD -MP -MF $(DEPDIR)/smartsim-simulatorwindow.Tpo -c -o smartsim-simulatorwindow.o `test -f 'simulatorwindow.c' || echo '$(srcdir)/'`simulatorwindow.c
	$(am__mv) $(DEPDIR)/smartsim-simulatorwindow.Tpo $(DEPDIR)/smartsim-simulatorwindow.Po
#	source='simulatorwindow.c' object='smartsim-simulatorwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-simulatorwindow.o `test -f 'simulatorwindow.c' || echo '$(srcdir)/'`simulatorwindow.c

smartsim-simulatorwindow.obj: simulatorwindow.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-simulatorwindow.obj -MD -MP -MF $(DEPDIR)/smartsim-simulatorwindow.Tpo -c -o smartsim-simulatorwindow.obj `if test -f 'simulatorwindow.c'; then $(CYGPATH_W) 'simulatorwindow.c'; else $(CYGPATH_W) '$(srcdir)/simulatorwindow.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-simulatorwindow.Tpo $(DEPDIR)/smartsim-simulatorwindow.Po
#	source='simulatorwindow.c' object='smartsim-simulatorwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-simulatorwindow.obj `if test -f 'simulatorwindow.c'; then $(CYGPATH_W) 'simulatorwindow.c'; else $(CYGPATH_W) '$(srcdir)/simulatorwindow.c'; fi`

smartsim-tag.o: tag.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-tag.o -MD -MP -MF $(DEPDIR)/smartsim-tag.Tpo -c -o smartsim-tag.o `test -f 'tag.c' || echo '$(srcdir)/'`tag.c
	$(am__mv) $(DEPDIR)/smartsim-tag.Tpo $(DEPDIR)/smartsim-tag.Po
#	source='tag.c' object='smartsim-tag.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-tag.o `test -f 'tag.c' || echo '$(srcdir)/'`tag.c

smartsim-tag.obj: tag.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-tag.obj -MD -MP -MF $(DEPDIR)/smartsim-tag.Tpo -c -o smartsim-tag.obj `if test -f 'tag.c'; then $(CYGPATH_W) 'tag.c'; else $(CYGPATH_W) '$(srcdir)/tag.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-tag.Tpo $(DEPDIR)/smartsim-tag.Po
#	source='tag.c' object='smartsim-tag.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-tag.obj `if test -f 'tag.c'; then $(CYGPATH_W) 'tag.c'; else $(CYGPATH_W) '$(srcdir)/tag.c'; fi`

smartsim-wireinst.o: wireinst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-wireinst.o -MD -MP -MF $(DEPDIR)/smartsim-wireinst.Tpo -c -o smartsim-wireinst.o `test -f 'wireinst.c' || echo '$(srcdir)/'`wireinst.c
	$(am__mv) $(DEPDIR)/smartsim-wireinst.Tpo $(DEPDIR)/smartsim-wireinst.Po
#	source='wireinst.c' object='smartsim-wireinst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-wireinst.o `test -f 'wireinst.c' || echo '$(srcdir)/'`wireinst.c

smartsim-wireinst.obj: wireinst.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-wireinst.obj -MD -MP -MF $(DEPDIR)/smartsim-wireinst.Tpo -c -o smartsim-wireinst.obj `if test -f 'wireinst.c'; then $(CYGPATH_W) 'wireinst.c'; else $(CYGPATH_W) '$(srcdir)/wireinst.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-wireinst.Tpo $(DEPDIR)/smartsim-wireinst.Po
#	source='wireinst.c' object='smartsim-wireinst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-wireinst.obj `if test -f 'wireinst.c'; then $(CYGPATH_W) 'wireinst.c'; else $(CYGPATH_W) '$(srcdir)/wireinst.c'; fi`

smartsim-wirestate.o: wirestate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-wirestate.o -MD -MP -MF $(DEPDIR)/smartsim-wirestate.Tpo -c -o smartsim-wirestate.o `test -f 'wirestate.c' || echo '$(srcdir)/'`wirestate.c
	$(am__mv) $(DEPDIR)/smartsim-wirestate.Tpo $(DEPDIR)/smartsim-wirestate.Po
#	source='wirestate.c' object='smartsim-wirestate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-wirestate.o `test -f 'wirestate.c' || echo '$(srcdir)/'`wirestate.c

smartsim-wirestate.obj: wirestate.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-wirestate.obj -MD -MP -MF $(DEPDIR)/smartsim-wirestate.Tpo -c -o smartsim-wirestate.obj `if test -f 'wirestate.c'; then $(CYGPATH_W) 'wirestate.c'; else $(CYGPATH_W) '$(srcdir)/wirestate.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-wirestate.Tpo $(DEPDIR)/smartsim-wirestate.Po
#	source='wirestate.c' object='smartsim-wirestate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-wirestate.obj `if test -f 'wirestate.c'; then $(CYGPATH_W) 'wirestate.c'; else $(CYGPATH_W) '$(srcdir)/wirestate.c'; fi`

smartsim-timingdiagram.o: timingdiagram.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-timingdiagram.o -MD -MP -MF $(DEPDIR)/smartsim-timingdiagram.Tpo -c -o smartsim-timingdiagram.o `test -f 'timingdiagram.c' || echo '$(srcdir)/'`timingdiagram.c
	$(am__mv) $(DEPDIR)/smartsim-timingdiagram.Tpo $(DEPDIR)/smartsim-timingdiagram.Po
#	source='timingdiagram.c' object='smartsim-timingdiagram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-timingdiagram.o `test -f 'timingdiagram.c' || echo '$(srcdir)/'`timingdiagram.c

smartsim-timingdiagram.obj: timingdiagram.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-timingdiagram.obj -MD -MP -MF $(DEPDIR)/smartsim-timingdiagram.Tpo -c -o smartsim-timingdiagram.obj `if test -f 'timingdiagram.c'; then $(CYGPATH_W) 'timingdiagram.c'; else $(CYGPATH_W) '$(srcdir)/timingdiagram.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-timingdiagram.Tpo $(DEPDIR)/smartsim-timingdiagram.Po
#	source='timingdiagram.c' object='smartsim-timingdiagram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-timingdiagram.obj `if test -f 'timingdiagram.c'; then $(CYGPATH_W) 'timingdiagram.c'; else $(CYGPATH_W) '$(srcdir)/timingdiagram.c'; fi`

smartsim-updatequeue.o: updatequeue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-updatequeue.o -MD -MP -MF $(DEPDIR)/smartsim-updatequeue.Tpo -c -o smartsim-updatequeue.o `test -f 'updatequeue.c' || echo '$(srcdir)/'`updatequeue.c
	$(am__mv) $(DEPDIR)/smartsim-updatequeue.Tpo $(DEPDIR)/smartsim-updatequeue.Po
#	source='updatequeue.c' object='smartsim-updatequeue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-updatequeue.o `test -f 'updatequeue.c' || echo '$(srcdir)/'`updatequeue.c

smartsim-updatequeue.obj: updatequeue.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -MT smartsim-updatequeue.obj -MD -MP -MF $(DEPDIR)/smartsim-updatequeue.Tpo -c -o smartsim-updatequeue.obj `if test -f 'updatequeue.c'; then $(CYGPATH_W) 'updatequeue.c'; else $(CYGPATH_W) '$(srcdir)/updatequeue.c'; fi`
	$(am__mv) $(DEPDIR)/smartsim-updatequeue.Tpo $(DEPDIR)/smartsim-updatequeue.Po
#	source='updatequeue.c' object='smartsim-updatequeue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartsim_CFLAGS) $(CFLAGS) -c -o smartsim-updatequeue.obj `if test -f 'updatequeue.c'; then $(CYGPATH_W) 'updatequeue.c'; else $(CYGPATH_W) '$(srcdir)/updatequeue.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(smartsimdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-smartsimPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-smartsimPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-smartsimPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-smartsimPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-smartsimPROGRAMS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-smartsimPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
